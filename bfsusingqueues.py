# -*- coding: utf-8 -*-
"""bfsUsingQueues.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nn7GjqI3vNegf3eaAx1cuTAxIXR_jnr9
"""

graph = {
    'A':['B','C'],
    'B':['D','E'],
    'C':['F'],
    'D':[],
    'E':[],
    'F':[]
}

def bfs(graph, start_node):
  queue=[start_node];
  visited=set() # set() -> unordered collection of unique elements
  while queue: # loop until stack is empty
    current_node = queue.pop(0)
    if current_node not in visited:
      print(current_node, end=' ')
      visited.add(current_node)
      for neighbor in graph[current_node]:
        if neighbor not in visited:
          queue.append(neighbor)

print("BFS traversal order(using queue): ")
bfs(graph,'A')